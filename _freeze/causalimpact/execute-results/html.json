{
  "hash": "ea1b38424a7cc2c2f6f45f6563fe7dcb",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Bayesian Structural Time Series\"\nauthor:\n  - name: Eray Turkel\n  - name: Ignacio Martinez\n---\n\n\nInterrupted time series is a quasi-experimental design used to evaluate the\nimpact of an intervention or event on an outcome of interest. It involves\ncollecting data on the outcome over time, both before and after the intervention\noccurs. The \"interruption\" is the point at which the intervention is introduced.\nThe [{causalImpact}](https://github.com/google/CausalImpact) R package is a very\npopular implementation of this methodology that uses Bayesian structural time\nseries to estimate the effect of an intervention.\n\nThe package's\n[vignette](https://google.github.io/CausalImpact/CausalImpact.html) provides a\ndetailed guide on its usage. To illustrate, let's run the most simple example\nfrom that vignette:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(CausalImpact)  # Load the CausalImpact package\n\n# Generate synthetic data\nset.seed(1)  # Set the random seed for reproducibility\nx1 <- 100 + arima.sim(model = list(ar = 0.999), n = 100)  # Simulated covariate\ny <- 1.2 * x1 + rnorm(100)  # Simulated outcome with a linear relationship to x1\ny[71:100] <- y[71:100] + 10  # Introduce an intervention effect in the latter part of the series\ndata <- cbind(y, x1)  # Combine outcome and covariate into a data matrix\n\n# Define pre- and post-intervention periods\npre.period <- c(1, 70)\npost.period <- c(71, 100)\n\n# Estimate causal impact\nimpact <- CausalImpact(data, pre.period, post.period)  # Main function to estimate the impact\n\n# Visualize results\nplot(impact)  # Default plot with three panels\n```\n\n::: {.cell-output-display}\n![](causalimpact_files/figure-html/casualimapct-1.png){width=672}\n:::\n:::\n\n\nThe default plot produced by this code consists of three panels. The first panel\ndisplays the data alongside a counterfactual prediction for the post-treatment\nperiod. The second panel shows the discrepancy between the observed data and the\ncounterfactual predictions, representing the estimated pointwise causal effect.\nIn the third panel, these pointwise contributions are summed, resulting in a\nplot of the intervention's cumulative effect.\n\nA crucial caveat is that these inferences hinge on the assumption that the\ncovariates themselves remain unaffected by the intervention. Moreover, the model\npresupposes the stability of the relationship between covariates and the treated\ntime series, as established in the pre-intervention period, throughout the\npost-intervention period. In essence, applying this or any other causal\ninference algorithm alone does not guarantee a causal answer. Causality is not\ninherent in the data or the model; it stems from our beliefs and assumptions\nabout the world. No algorithm or method can definitively establish causality.\n\nThis is why the very name of the {causalImpact} package might be somewhat\nconfusing. Users often mistakenly infer a 99% probability of a causal effect\nsimply by misinterpreting the package's output.\n\n\n## Cautionary tales\n\nMisinterpreting the findings of a {causalImpact} study can occur in several\nways. First, overlooking selection bias can lead to erroneous conclusions. For\ninstance, ...\n\nSecond, insufficient data to discern seasonality can also distort results. To\nillustrate, \n\n::: {.callout-tip}\n## Learn more\n@brodersen2015inferring Inferring causal impact using Bayesian structural time-series models.\n:::",
    "supporting": [
      "causalimpact_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}